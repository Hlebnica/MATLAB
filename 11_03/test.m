h = 0.01; % шаг сетки
t = 0:h:2; % вектор временных точек

% Инициализируем векторы решений и начальные значения
x = zeros(size(t)); % вектор решений для x
y = zeros(size(t)); % вектор решений для y
z = zeros(size(t)); % вектор решений для z
x(1) = 1; % начальное значение x
y(1) = 1; % начальное значение y
z(1) = 1; % начальное значение z

% Решаем систему дифференциальных уравнений методом Ньютона
for i = 2:length(t)
    % Задаем начальное приближение
    X = [x(i-1); y(i-1); z(i-1)];
    % Выполняем итерации метода Ньютона до тех пор, пока не достигнем заданной точности
    for j = 1:10
        % Вычисляем значение функции и Якобиан
        F = [x(i-1) - X(1) + h*(X(1) - X(2) + X(3));
             y(i-1) - X(2) + h*(2*X(1) - 3*X(2) - X(3));
             z(i-1) - X(3) + h*(-X(1) - X(2) + X(3))];
        J = [1+h, -h, h;             2*h, -3*h, -h;             -h, -h, 1+h];
        % Обновляем приближение с помощью метода Ньютона
        X = X - J\F;
    end
    % Сохраняем значение решения
    x(i) = X(1);
    y(i) = X(2);
    z(i) = X(3);
end

% Выводим графики решений
plot(t,x,t,y,t,z)
xlabel('t')
ylabel('x, y, z')
