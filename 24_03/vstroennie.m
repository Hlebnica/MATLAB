% Определение функции для дифференциального уравнения
ode = @(x,y) [y(2); x];

% Определение граничных условий
bc = @(ya,yb) [ya(1); yb(1)];

% Создание начального приближения для решения
solinit = bvpinit(linspace(0,1,n), [0,0]);

% Решение краевой задачи
sol = bvp4c(ode, bc, solinit);

% Вычисление значения решения на сетке
y = deval(sol, sx);

% Построение графиков
figure(1);
plot(sx, y(1,:), '-k', 'LineWidth', 3)
hold on
plot(sx, (sx.^3-sx)/6.0, '-r')
hold off
